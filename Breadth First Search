#include<bits/stdc++.h>
using namespace std;

void addEdge(vector<int> adj[],int u,int v)
{
  adj[u].push_back(v);
  adj[v].push_back(u);
  
}


void BFS(vector<int> adj[], int s,int V)
{
  vector<bool> visited(V, false);
  list<int> queue;
  queue.push_back(s);
  while(!queue.empty())
  {
    s = queue.front();
    queue.pop_front();
    if(!visited[s])
    {
      cout << s << " "; 
      visited[s] = true;
    }
    
    for(auto i=adj[s].begin();i!=adj[s].end();i++)
    {
      if(!visited[*i])
      {
        queue.push_back(*i);
      }
    }
  }
}
  


int main()
{
 int V = 7;
  vector<int> adj[7];
    addEdge(adj, 1, 2);
    addEdge(adj, 1, 3);
    addEdge(adj, 2, 5);
    addEdge(adj, 2, 4);
    addEdge(adj, 3, 5);
    addEdge(adj, 4, 5);
    addEdge(adj, 4, 6);
    addEdge(adj, 5, 6);
    BFS(adj,1, V);
    return 0;
}
